     1                                 %line 1+1 calc.asm
     2                                 [section .data]
     3                                 
     4 00000000 0000000000000000       number1 dq 0
     5 00000008 0000000000000000       number2 dq 0
     6 00000010 0000000000000000       numInput1 dq 0
     7 00000018 0000000000000000       numInput2 dq 0
     8 00000020 0000000000000000       dummyRead dq 0
     9 00000028 0000000000000000       operand dq 0
    10                                 
    11 00000030 0A                     newline db 0xa
    12                                 
    13                                 [section .text]
    14                                 [global _start]
    15                                 
    16                                 _start:
    17                                 
    18 00000000 48C7C000000000          mov rax,0
    19 00000007 48C7C206000000          mov rdx,6
    20 0000000E 48C7C700000000          mov rdi,0
    21 00000015 48C7C6[00000000]        mov rsi,numInput1
    22 0000001C 0F05                    syscall
    23                                 
    24 0000001E 48C7C000000000          mov rax,0
    25 00000025 48C7C201000000          mov rdx,1
    26 0000002C 48C7C700000000          mov rdi,0
    27 00000033 48C7C6[00000000]        mov rsi,dummyRead
    28 0000003A 0F05                    syscall
    29                                 
    30 0000003C 48C7C000000000          mov rax,0
    31 00000043 48C7C201000000          mov rdx,1
    32 0000004A 48C7C700000000          mov rdi,0
    33 00000051 48C7C6[00000000]        mov rsi,operand
    34 00000058 0F05                    syscall
    35                                 
    36 0000005A 48C7C000000000          mov rax,0
    37 00000061 48C7C201000000          mov rdx,1
    38 00000068 48C7C700000000          mov rdi,0
    39 0000006F 48C7C6[00000000]        mov rsi,dummyRead
    40 00000076 0F05                    syscall
    41                                 
    42 00000078 48C7C000000000          mov rax,0
    43 0000007F 48C7C206000000          mov rdx,6
    44 00000086 48C7C700000000          mov rdi,0
    45 0000008D 48C7C6[00000000]        mov rsi,numInput2
    46 00000094 0F05                    syscall
    47                                 
    48 00000096 48C7C000000000          mov rax,0
    49 0000009D 48C7C202000000          mov rdx,2
    50 000000A4 48C7C700000000          mov rdi,0
    51 000000AB 48C7C6[00000000]        mov rsi,dummyRead
    52                                 
    53 000000B2 49C7C106000000          mov r9,6
    54                                 
    55                                 convertNum1:
    56                                 
    57 000000B9 4C8B0425[00000000]      mov r8,[numInput1]
    58                                 
    59 000000C1 48C7C001000000          mov rax,1
    60 000000C8 48C7C206000000          mov rdx,6
    61 000000CF 48C7C701000000          mov rdi,1
    62 000000D6 48C7C6[00000000]        mov rsi,numInput1
    63 000000DD 0F05                    syscall
    64                                 
    65 000000DF 48C7C001000000          mov rax,1
    66 000000E6 48C7C201000000          mov rdx,1
    67 000000ED 48C7C701000000          mov rdi,1
    68 000000F4 48C7C6[00000000]        mov rsi,newline
    69 000000FB 0F05                    syscall
    70                                 
    71 000000FD 8A0425[00000000]        mov al,[numInput1]
    72 00000104 2C30                    sub al,48
    73                                 
    74 00000106 4C0FB6E0                movzx r12,al
    75                                 
    76 0000010A 48C7C001000000          mov rax,1
    77 00000111 4D89CA                  mov r10,r9
    78 00000114 4983EA01                sub r10,1
    79 00000118 48C7C20A000000          mov rdx,10
    80                                 num1_mul10:
    81 0000011F 4983FA00                cmp r10,0
    82 00000123 740A                    je end_mul10
    83 00000125 48F7E2                  mul rdx
    84 00000128 49FFCA                  dec r10
    85 0000012B 4983FA00                cmp r10,0
    86 0000012F 7FEC                    jg num1_mul10
    87                                 
    88                                 end_mul10:
    89 00000131 49F7E4                  mul r12
    90 00000134 48010425[00000000]      add [number1],rax
    91                                 
    92 0000013C 48C10C25[00000000]-     ror qword [numInput1],8
    93 0000013C 08                 
    94                                 
    95 00000145 49FFC9                  dec r9
    96 00000148 4983F900                cmp r9,0
    97 0000014C 0F8F61FFFFFF            jg convertNum1
    98                                 
    99                                 exit:
   100                                 
   101 00000152 488B0425[00000000]      mov rax,[number1]
   102                                 
   103 0000015A 48C7C001000000          mov rax,1
   104 00000161 48C7C201000000          mov rdx,1
   105 00000168 48C7C701000000          mov rdi,1
   106 0000016F 48C7C6[00000000]        mov rsi,operand
   107 00000176 0F05                    syscall
   108                                 
   109 00000178 48C7C03C000000          mov rax,60
   110 0000017F 48C7C700000000          mov rdi,0
   111 00000186 0F05                    syscall
