     1                                 %line 1+1 calc.asm
     2                                 [section .data]
     3                                 
     4 00000000 0000000000000000       number1 dq 0
     5 00000008 0000000000000000       number2 dq 0
     6 00000010 0000000000000000       result dq 0
     7 00000018 0000000000000000       numInput1 dq 0
     8 00000020 0000000000000000       numInput2 dq 0
     9 00000028 0000000000000000       dummyRead dq 0
    10 00000030 0000000000000000       operand dq 0
    11 00000038 0000000000000000       character dq 0
    12 00000040 0000000000000000       remainder dq 0
    13 00000048 2B00000000000000       positive dq 43
    14 00000050 2D00000000000000       negative dq 45
    15 00000058 0A00000000000000       newline dq 0x0a
    16 00000060 4552524F52000000       error_message dq "ERROR"
    17 00000068 2072200000000000       remainder_message dq " r "
    18                                 
    19                                 [section .text]
    20                                 [global _start]
    21                                 
    22                                 _start:
    23                                 
    24 00000000 48C7C000000000          mov rax,0
    25 00000007 48C7C206000000          mov rdx,6
    26 0000000E 48C7C700000000          mov rdi,0
    27 00000015 48C7C6[00000000]        mov rsi,numInput1
    28 0000001C 0F05                    syscall
    29                                 
    30 0000001E 48C7C000000000          mov rax,0
    31 00000025 48C7C201000000          mov rdx,1
    32 0000002C 48C7C700000000          mov rdi,0
    33 00000033 48C7C6[00000000]        mov rsi,dummyRead
    34 0000003A 0F05                    syscall
    35                                 
    36 0000003C 48C7C000000000          mov rax,0
    37 00000043 48C7C201000000          mov rdx,1
    38 0000004A 48C7C700000000          mov rdi,0
    39 00000051 48C7C6[00000000]        mov rsi,operand
    40 00000058 0F05                    syscall
    41                                 
    42 0000005A 48C7C000000000          mov rax,0
    43 00000061 48C7C201000000          mov rdx,1
    44 00000068 48C7C700000000          mov rdi,0
    45 0000006F 48C7C6[00000000]        mov rsi,dummyRead
    46 00000076 0F05                    syscall
    47                                 
    48 00000078 48C7C000000000          mov rax,0
    49 0000007F 48C7C206000000          mov rdx,6
    50 00000086 48C7C700000000          mov rdi,0
    51 0000008D 48C7C6[00000000]        mov rsi,numInput2
    52 00000094 0F05                    syscall
    53                                 
    54 00000096 48C7C000000000          mov rax,0
    55 0000009D 48C7C202000000          mov rdx,2
    56 000000A4 48C7C700000000          mov rdi,0
    57 000000AB 48C7C6[00000000]        mov rsi,dummyRead
    58 000000B2 0F05                    syscall
    59                                 
    60                                 
    61                                 
    62 000000B4 49C7C106000000          mov r9,6
    63                                 convertNum1:
    64                                 
    65 000000BB 4C8B0425[00000000]      mov r8,[numInput1]
    66 000000C3 8A0425[00000000]        mov al,[numInput1]
    67 000000CA 2C30                    sub al,48
    68 000000CC 4C0FB6E0                movzx r12,al
    69 000000D0 48C7C001000000          mov rax,1
    70 000000D7 4D89CA                  mov r10,r9
    71 000000DA 4983EA01                sub r10,1
    72 000000DE 49C7C30A000000          mov r11,10
    73                                 
    74                                 num1_mul10:
    75 000000E5 4983FA00                cmp r10,0
    76 000000E9 740A                    je num1_end_mul10
    77 000000EB 49F7E3                  mul r11
    78 000000EE 49FFCA                  dec r10
    79 000000F1 4983FA00                cmp r10,0
    80 000000F5 7FEC                    jg num1_mul10
    81                                 
    82                                 num1_end_mul10:
    83 000000F7 49F7E4                  mul r12
    84 000000FA 48010425[00000000]      add [number1],rax
    85 00000102 48C10C25[00000000]-     ror qword [numInput1],8
    86 00000102 08                 
    87 0000010B 49FFC9                  dec r9
    88 0000010E 4983F900                cmp r9,0
    89 00000112 7FA5                    jg convertNum1
    90                                 
    91                                 
    92                                 
    93 00000114 49C7C106000000          mov r9,6
    94                                 
    95                                 convertNum2:
    96 0000011B 4C8B0425[00000000]      mov r8,[numInput2]
    97 00000123 8A0425[00000000]        mov al,[numInput2]
    98 0000012A 2C30                    sub al,48
    99 0000012C 4C0FB6E0                movzx r12,al
   100 00000130 48C7C001000000          mov rax,1
   101 00000137 4D89CA                  mov r10,r9
   102 0000013A 4983EA01                sub r10,1
   103 0000013E 49C7C30A000000          mov r11,10
   104                                 
   105                                 num2_mul10:
   106 00000145 4983FA00                cmp r10,0
   107 00000149 740A                    je num2_end_mul10
   108 0000014B 49F7E3                  mul r11
   109 0000014E 49FFCA                  dec r10
   110 00000151 4983FA00                cmp r10,0
   111 00000155 7FEC                    jg num2_mul10
   112                                 
   113                                 num2_end_mul10:
   114 00000157 49F7E4                  mul r12
   115 0000015A 48010425[00000000]      add [number2],rax
   116 00000162 48C10C25[00000000]-     ror qword [numInput2],8
   117 00000162 08                 
   118 0000016B 49FFC9                  dec r9
   119 0000016E 4983F900                cmp r9,0
   120 00000172 7FA5                    jg convertNum2
   121                                 
   122                                 
   123                                 
   124 00000174 488B0425[00000000]      mov rax,[operand]
   125 0000017C 4883F82B                cmp rax,43
   126 00000180 7410                    je add_numbers
   127                                 
   128 00000182 4883F82D                cmp rax,45
   129 00000186 742C                    je subtract_numbers
   130                                 
   131 00000188 4883F82A                cmp rax,42
   132 0000018C 7448                    je multiply_numbers
   133                                 
   134 0000018E 4883F82F                cmp rax,47
   135 00000192 745C                    je divide_numbers
   136                                 
   137                                 add_numbers:
   138 00000194 488B0425[00000000]      mov rax,[number1]
   139 0000019C 48890425[00000000]      mov [result],rax
   140 000001A4 488B0425[00000000]      mov rax,[number2]
   141 000001AC 48010425[00000000]      add qword [result],rax
   142 000001B4 EB6E                    jmp print_sign
   143                                 
   144                                 subtract_numbers:
   145 000001B6 488B0425[00000000]      mov rax,[number1]
   146 000001BE 48890425[00000000]      mov [result],rax
   147 000001C6 488B0425[00000000]      mov rax,[number2]
   148 000001CE 48290425[00000000]      sub qword [result],rax
   149 000001D6 EB4C                    jmp print_sign
   150                                 
   151                                 multiply_numbers:
   152 000001D8 488B0425[00000000]      mov rax,[number1]
   153 000001E0 48F72425[00000000]      mul qword [number2]
   154 000001E8 48890425[00000000]      mov [result],rax
   155 000001F0 EB32                    jmp print_sign
   156                                 
   157                                 divide_numbers:
   158 000001F2 488B0425[00000000]      mov rax,[number1]
   159 000001FA 4C8B0425[00000000]      mov r8,[number2]
   160 00000202 4983F800                cmp r8,0
   161 00000206 0F840A010000            je overflow
   162 0000020C 48F73425[00000000]      div qword [number2]
   163 00000214 48890425[00000000]      mov [result],rax
   164 0000021C 48891425[00000000]      mov [remainder],rdx
   165 00000224 EBFE                    jmp print_sign
   166                                 
   167                                 
   168                                 
   169                                 print_sign:
   170 00000226 488B0425[00000000]      mov rax,[result]
   171 0000022E 4883F800                cmp rax,0
   172 00000232 7C1E                    jl print_sign_negative
   173 00000234 48C7C001000000          mov rax,1
   174 0000023B 48C7C701000000          mov rdi,1
   175 00000242 48C7C201000000          mov rdx,1
   176 00000249 48C7C6[00000000]        mov rsi,positive
   177 00000250 0F05                    syscall
   178 00000252 EB2A                    jmp display
   179                                 
   180                                 print_sign_negative:
   181 00000254 488B0425[00000000]      mov rax,[result]
   182 0000025C 4883F800                cmp rax,0
   183 00000260 7D1C                    jge display
   184 00000262 48C7C001000000          mov rax,1
   185 00000269 48C7C201000000          mov rdx,1
   186 00000270 48C7C701000000          mov rdi,1
   187 00000277 48C7C6[00000000]        mov rsi,negative
   188 0000027E 0F05                    syscall
   189                                 
   190                                 display:
   191                                 
   192 00000280 49B80010A5D4E80000-     mov r8,1000000000000
   193 00000280 00                 
   194 0000028A 488B0425[00000000]      mov rax,[result]
   195 00000292 48C7C200000000          mov rdx,0
   196 00000299 49F7F0                  div r8
   197 0000029C 4883F800                cmp rax,0
   198                                 
   199                                 
   200 000002A0 488B0425[00000000]      mov rax,[result]
   201 000002A8 4883F800                cmp rax,0
   202 000002AC 7D09                    jge display_loop
   203 000002AE 48F7D8                  neg rax
   204 000002B1 48890425[00000000]      mov [result],rax
   205                                 
   206                                 display_loop:
   207 000002B9 49C7C20A000000          mov r10,10
   208 000002C0 4C89C0                  mov rax,r8
   209 000002C3 48C7C200000000          mov rdx,0
   210 000002CA 49F7F2                  div r10
   211 000002CD 4989C0                  mov r8,rax
   212                                 
   213 000002D0 488B0425[00000000]      mov rax,[result]
   214 000002D8 48C7C200000000          mov rdx,0
   215 000002DF 49F7F0                  div r8
   216                                 
   217 000002E2 48891425[00000000]      mov [result],rdx
   218 000002EA 4883C030                add rax,48
   219 000002EE 48890425[00000000]      mov [character],rax
   220                                 
   221 000002F6 48C7C001000000          mov rax,1
   222 000002FD 48C7C201000000          mov rdx,1
   223 00000304 48C7C701000000          mov rdi,1
   224 0000030B 48C7C6[00000000]        mov rsi,character
   225 00000312 0F05                    syscall
   226                                 
   227 00000314 4983F801                cmp r8,1
   228 00000318 7F9D                    jg display_loop
   229 0000031A EB1E                    jmp print_remainder
   230                                 
   231                                 overflow:
   232 0000031C 48C7C001000000          mov rax,1
   233 00000323 48C7C205000000          mov rdx,5
   234 0000032A 48C7C701000000          mov rdi,1
   235 00000331 48C7C6[00000000]        mov rsi,error_message
   236 00000338 0F05                    syscall
   237 0000033A EB51                    jmp exit
   238                                 
   239                                 print_remainder:
   240 0000033C 488B0425[00000000]      mov rax,[remainder]
   241 00000344 4883F800                cmp rax,0
   242 00000348 7443                    je exit
   243 0000034A 48C7C001000000          mov rax,1
   244 00000351 48C7C701000000          mov rdi,1
   245 00000358 48C7C204000000          mov rdx,4
   246 0000035F 48C7C6[00000000]        mov rsi,remainder_message
   247 00000366 0F05                    syscall
   248                                 
   249 00000368 48830425[00000000]-     add qword [remainder],48
   250 00000368 30                 
   251 00000371 48C7C001000000          mov rax,1
   252 00000378 48C7C201000000          mov rdx,1
   253 0000037F 48C7C701000000          mov rdi,1
   254 00000386 48C7C6[00000000]        mov rsi,remainder
   255 0000038D 0F05                    syscall
   256                                 
   257                                 exit:
   258 0000038F 48C7C001000000          mov rax,1
   259 00000396 48C7C201000000          mov rdx,1
   260 0000039D 48C7C701000000          mov rdi,1
   261 000003A4 48C7C6[00000000]        mov rsi,newline
   262 000003AB 0F05                    syscall
   263                                 
   264 000003AD 48C7C03C000000          mov rax,60
   265 000003B4 48C7C700000000          mov rdi,0
   266 000003BB 0F05                    syscall
