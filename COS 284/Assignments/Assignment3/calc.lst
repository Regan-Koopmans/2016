     1                                 %line 1+1 calc.asm
     2                                 [section .data]
     3                                 
     4 00000000 0000000000000000       number1 dq 0
     5 00000008 0000000000000000       number2 dq 0
     6 00000010 0000000000000000       result dq 0
     7 00000018 0000000000000000       numInput1 dq 0
     8 00000020 0000000000000000       numInput2 dq 0
     9 00000028 0000000000000000       dummyRead dq 0
    10 00000030 0000000000000000       operand dq 0
    11 00000038 0000000000000000       character dq 0
    12 00000040 0000000000000000       remainder dq 0
    13 00000048 2B00000000000000       positive dq 43
    14 00000050 2D00000000000000       negative dq 45
    15 00000058 0A00000000000000       newline dq 0x0a
    16 00000060 4552524F52000000       error_message dq "ERROR"
    17 00000068 2072200000000000       remainder_message dq " r "
    18 00000070 00                     was_division db 0
    19                                 
    20                                 [section .text]
    21                                 [global _start]
    22                                 
    23                                 _start:
    24                                 
    25 00000000 48C7C000000000          mov rax,0
    26 00000007 48890425[00000000]      mov [was_division],rax
    27                                 
    28 0000000F 48C7C000000000          mov rax,0
    29 00000016 48C7C206000000          mov rdx,6
    30 0000001D 48C7C700000000          mov rdi,0
    31 00000024 48C7C6[00000000]        mov rsi,numInput1
    32 0000002B 0F05                    syscall
    33                                 
    34 0000002D 48C7C000000000          mov rax,0
    35 00000034 48C7C201000000          mov rdx,1
    36 0000003B 48C7C700000000          mov rdi,0
    37 00000042 48C7C6[00000000]        mov rsi,dummyRead
    38 00000049 0F05                    syscall
    39                                 
    40 0000004B 48C7C000000000          mov rax,0
    41 00000052 48C7C201000000          mov rdx,1
    42 00000059 48C7C700000000          mov rdi,0
    43 00000060 48C7C6[00000000]        mov rsi,operand
    44 00000067 0F05                    syscall
    45                                 
    46 00000069 48C7C000000000          mov rax,0
    47 00000070 48C7C201000000          mov rdx,1
    48 00000077 48C7C700000000          mov rdi,0
    49 0000007E 48C7C6[00000000]        mov rsi,dummyRead
    50 00000085 0F05                    syscall
    51                                 
    52 00000087 48C7C000000000          mov rax,0
    53 0000008E 48C7C206000000          mov rdx,6
    54 00000095 48C7C700000000          mov rdi,0
    55 0000009C 48C7C6[00000000]        mov rsi,numInput2
    56 000000A3 0F05                    syscall
    57                                 
    58 000000A5 48C7C000000000          mov rax,0
    59 000000AC 48C7C202000000          mov rdx,2
    60 000000B3 48C7C700000000          mov rdi,0
    61 000000BA 48C7C6[00000000]        mov rsi,dummyRead
    62 000000C1 0F05                    syscall
    63                                 
    64                                 
    65                                 
    66 000000C3 49C7C106000000          mov r9,6
    67                                 convertNum1:
    68                                 
    69 000000CA 4C8B0425[00000000]      mov r8,[numInput1]
    70 000000D2 8A0425[00000000]        mov al,[numInput1]
    71 000000D9 2C30                    sub al,48
    72                                 
    73 000000DB 3C00                    cmp al,0
    74 000000DD 0F8C6F020000            jl error
    75 000000E3 3C09                    cmp al,9
    76 000000E5 0F8F67020000            jg error
    77                                 
    78 000000EB 4C0FB6E0                movzx r12,al
    79 000000EF 48C7C001000000          mov rax,1
    80 000000F6 4D89CA                  mov r10,r9
    81 000000F9 4983EA01                sub r10,1
    82 000000FD 49C7C30A000000          mov r11,10
    83                                 
    84                                 num1_mul10:
    85 00000104 4983FA00                cmp r10,0
    86 00000108 740A                    je num1_end_mul10
    87 0000010A 49F7E3                  mul r11
    88 0000010D 49FFCA                  dec r10
    89 00000110 4983FA00                cmp r10,0
    90 00000114 7FEC                    jg num1_mul10
    91                                 
    92                                 num1_end_mul10:
    93 00000116 49F7E4                  mul r12
    94 00000119 48010425[00000000]      add [number1],rax
    95 00000121 48C10C25[00000000]-     ror qword [numInput1],8
    96 00000121 08                 
    97 0000012A 49FFC9                  dec r9
    98 0000012D 4983F900                cmp r9,0
    99 00000131 7F95                    jg convertNum1
   100                                 
   101                                 
   102                                 
   103 00000133 49C7C106000000          mov r9,6
   104                                 
   105                                 convertNum2:
   106 0000013A 4C8B0425[00000000]      mov r8,[numInput2]
   107 00000142 8A0425[00000000]        mov al,[numInput2]
   108 00000149 2C30                    sub al,48
   109                                 
   110 0000014B 3C00                    cmp al,0
   111 0000014D 0F8CFF010000            jl error
   112 00000153 3C09                    cmp al,9
   113 00000155 0F8FF7010000            jg error
   114                                 
   115 0000015B 4C0FB6E0                movzx r12,al
   116 0000015F 48C7C001000000          mov rax,1
   117 00000166 4D89CA                  mov r10,r9
   118 00000169 4983EA01                sub r10,1
   119 0000016D 49C7C30A000000          mov r11,10
   120                                 
   121                                 num2_mul10:
   122 00000174 4983FA00                cmp r10,0
   123 00000178 740A                    je num2_end_mul10
   124 0000017A 49F7E3                  mul r11
   125 0000017D 49FFCA                  dec r10
   126 00000180 4983FA00                cmp r10,0
   127 00000184 7FEC                    jg num2_mul10
   128                                 
   129                                 num2_end_mul10:
   130 00000186 49F7E4                  mul r12
   131 00000189 48010425[00000000]      add [number2],rax
   132 00000191 48C10C25[00000000]-     ror qword [numInput2],8
   133 00000191 08                 
   134 0000019A 49FFC9                  dec r9
   135 0000019D 4983F900                cmp r9,0
   136 000001A1 7F95                    jg convertNum2
   137                                 
   138                                 
   139                                 
   140 000001A3 488B0425[00000000]      mov rax,[operand]
   141 000001AB 4883F82B                cmp rax,43
   142 000001AF 7415                    je add_numbers
   143                                 
   144 000001B1 4883F82D                cmp rax,45
   145 000001B5 7431                    je subtract_numbers
   146                                 
   147 000001B7 4883F82A                cmp rax,42
   148 000001BB 744D                    je multiply_numbers
   149                                 
   150 000001BD 4883F82F                cmp rax,47
   151 000001C1 7461                    je divide_numbers
   152                                 
   153 000001C3 E98B010000              jmp error
   154                                 
   155                                 add_numbers:
   156 000001C8 488B0425[00000000]      mov rax,[number1]
   157 000001D0 48890425[00000000]      mov [result],rax
   158 000001D8 488B0425[00000000]      mov rax,[number2]
   159 000001E0 48010425[00000000]      add qword [result],rax
   160 000001E8 EB76                    jmp print_sign
   161                                 
   162                                 subtract_numbers:
   163 000001EA 488B0425[00000000]      mov rax,[number1]
   164 000001F2 48890425[00000000]      mov [result],rax
   165 000001FA 488B0425[00000000]      mov rax,[number2]
   166 00000202 48290425[00000000]      sub qword [result],rax
   167 0000020A EB54                    jmp print_sign
   168                                 
   169                                 multiply_numbers:
   170 0000020C 488B0425[00000000]      mov rax,[number1]
   171 00000214 48F72425[00000000]      mul qword [number2]
   172 0000021C 48890425[00000000]      mov [result],rax
   173 00000224 EB3A                    jmp print_sign
   174                                 
   175                                 divide_numbers:
   176 00000226 488B0425[00000000]      mov rax,[number1]
   177 0000022E 4C8B0425[00000000]      mov r8,[number2]
   178 00000236 4983F800                cmp r8,0
   179 0000023A 0F8412010000            je error
   180 00000240 48F73425[00000000]      div qword [number2]
   181 00000248 48890425[00000000]      mov [result],rax
   182 00000250 48891425[00000000]      mov [remainder],rdx
   183 00000258 C60425[00000000]01      mov byte [was_division],1
   184 00000260 EBFE                    jmp print_sign
   185                                 
   186                                 
   187                                 
   188                                 print_sign:
   189 00000262 488B0425[00000000]      mov rax,[result]
   190 0000026A 4883F800                cmp rax,0
   191 0000026E 7C1E                    jl print_sign_negative
   192 00000270 48C7C001000000          mov rax,1
   193 00000277 48C7C701000000          mov rdi,1
   194 0000027E 48C7C201000000          mov rdx,1
   195 00000285 48C7C6[00000000]        mov rsi,positive
   196 0000028C 0F05                    syscall
   197 0000028E EB2A                    jmp display
   198                                 
   199                                 print_sign_negative:
   200 00000290 488B0425[00000000]      mov rax,[result]
   201 00000298 4883F800                cmp rax,0
   202 0000029C 7D1C                    jge display
   203 0000029E 48C7C001000000          mov rax,1
   204 000002A5 48C7C201000000          mov rdx,1
   205 000002AC 48C7C701000000          mov rdi,1
   206 000002B3 48C7C6[00000000]        mov rsi,negative
   207 000002BA 0F05                    syscall
   208                                 
   209                                 display:
   210                                 
   211 000002BC 49B80010A5D4E80000-     mov r8,1000000000000
   212 000002BC 00                 
   213 000002C6 488B0425[00000000]      mov rax,[result]
   214 000002CE 48C7C200000000          mov rdx,0
   215 000002D5 49F7F0                  div r8
   216 000002D8 4883F800                cmp rax,0
   217                                 
   218                                 
   219 000002DC 488B0425[00000000]      mov rax,[result]
   220 000002E4 4883F800                cmp rax,0
   221 000002E8 7D09                    jge display_loop
   222 000002EA 48F7D8                  neg rax
   223 000002ED 48890425[00000000]      mov [result],rax
   224                                 
   225                                 display_loop:
   226 000002F5 49C7C20A000000          mov r10,10
   227 000002FC 4C89C0                  mov rax,r8
   228 000002FF 48C7C200000000          mov rdx,0
   229 00000306 49F7F2                  div r10
   230 00000309 4989C0                  mov r8,rax
   231                                 
   232 0000030C 488B0425[00000000]      mov rax,[result]
   233 00000314 48C7C200000000          mov rdx,0
   234 0000031B 49F7F0                  div r8
   235                                 
   236 0000031E 48891425[00000000]      mov [result],rdx
   237 00000326 4883C030                add rax,48
   238 0000032A 48890425[00000000]      mov [character],rax
   239                                 
   240 00000332 48C7C001000000          mov rax,1
   241 00000339 48C7C201000000          mov rdx,1
   242 00000340 48C7C701000000          mov rdi,1
   243 00000347 48C7C6[00000000]        mov rsi,character
   244 0000034E 0F05                    syscall
   245                                 
   246 00000350 4983F801                cmp r8,1
   247 00000354 7F9D                    jg display_loop
   248 00000356 EB1E                    jmp print_remainder
   249                                 
   250                                 error:
   251 00000358 48C7C001000000          mov rax,1
   252 0000035F 48C7C205000000          mov rdx,5
   253 00000366 48C7C701000000          mov rdi,1
   254 0000036D 48C7C6[00000000]        mov rsi,error_message
   255 00000374 0F05                    syscall
   256 00000376 EB51                    jmp exit
   257                                 
   258                                 print_remainder:
   259 00000378 488B0425[00000000]      mov rax,[was_division]
   260 00000380 4883F800                cmp rax,0
   261 00000384 7443                    je exit
   262 00000386 48C7C001000000          mov rax,1
   263 0000038D 48C7C701000000          mov rdi,1
   264 00000394 48C7C204000000          mov rdx,4
   265 0000039B 48C7C6[00000000]        mov rsi,remainder_message
   266 000003A2 0F05                    syscall
   267                                 
   268 000003A4 48830425[00000000]-     add qword [remainder],48
   269 000003A4 30                 
   270 000003AD 48C7C001000000          mov rax,1
   271 000003B4 48C7C201000000          mov rdx,1
   272 000003BB 48C7C701000000          mov rdi,1
   273 000003C2 48C7C6[00000000]        mov rsi,remainder
   274 000003C9 0F05                    syscall
   275                                 
   276                                 exit:
   277 000003CB 48C7C001000000          mov rax,1
   278 000003D2 48C7C201000000          mov rdx,1
   279 000003D9 48C7C701000000          mov rdi,1
   280 000003E0 48C7C6[00000000]        mov rsi,newline
   281 000003E7 0F05                    syscall
   282                                 
   283 000003E9 48C7C03C000000          mov rax,60
   284 000003F0 48C7C700000000          mov rdi,0
   285 000003F7 0F05                    syscall
