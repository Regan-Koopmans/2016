     1                                 %line 1+1 calc.asm
     2                                 [section .data]
     3                                 
     4 00000000 0000000000000000       number1 dq 0
     5 00000008 0000000000000000       number2 dq 0
     6 00000010 0000000000000000       result dq 0
     7 00000018 0000000000000000       numInput1 dq 0
     8 00000020 0000000000000000       numInput2 dq 0
     9 00000028 0000000000000000       dummyRead dq 0
    10 00000030 0000000000000000       operand dq 0
    11 00000038 0000000000000000       character dq 0
    12 00000040 0000000000000000       remainder dq 0
    13 00000048 2B00000000000000       positive dq 43
    14 00000050 2D00000000000000       negative dq 45
    15 00000058 0A00000000000000       newline dq 0x0a
    16 00000060 4552524F52000000       error_message dq "ERROR"
    17 00000068 2072200000000000       remainder_message dq " r "
    18                                 
    19                                 [section .text]
    20                                 [global _start]
    21                                 
    22                                 _start:
    23                                 
    24 00000000 48C7C000000000          mov rax,0
    25 00000007 48C7C206000000          mov rdx,6
    26 0000000E 48C7C700000000          mov rdi,0
    27 00000015 48C7C6[00000000]        mov rsi,numInput1
    28 0000001C 0F05                    syscall
    29                                 
    30 0000001E 48C7C000000000          mov rax,0
    31 00000025 48C7C201000000          mov rdx,1
    32 0000002C 48C7C700000000          mov rdi,0
    33 00000033 48C7C6[00000000]        mov rsi,dummyRead
    34 0000003A 0F05                    syscall
    35                                 
    36 0000003C 48C7C000000000          mov rax,0
    37 00000043 48C7C201000000          mov rdx,1
    38 0000004A 48C7C700000000          mov rdi,0
    39 00000051 48C7C6[00000000]        mov rsi,operand
    40 00000058 0F05                    syscall
    41                                 
    42 0000005A 48C7C000000000          mov rax,0
    43 00000061 48C7C201000000          mov rdx,1
    44 00000068 48C7C700000000          mov rdi,0
    45 0000006F 48C7C6[00000000]        mov rsi,dummyRead
    46 00000076 0F05                    syscall
    47                                 
    48 00000078 48C7C000000000          mov rax,0
    49 0000007F 48C7C206000000          mov rdx,6
    50 00000086 48C7C700000000          mov rdi,0
    51 0000008D 48C7C6[00000000]        mov rsi,numInput2
    52 00000094 0F05                    syscall
    53                                 
    54 00000096 48C7C000000000          mov rax,0
    55 0000009D 48C7C202000000          mov rdx,2
    56 000000A4 48C7C700000000          mov rdi,0
    57 000000AB 48C7C6[00000000]        mov rsi,dummyRead
    58 000000B2 0F05                    syscall
    59                                 
    60                                 
    61                                 
    62 000000B4 49C7C106000000          mov r9,6
    63                                 convertNum1:
    64                                 
    65 000000BB 4C8B0425[00000000]      mov r8,[numInput1]
    66 000000C3 8A0425[00000000]        mov al,[numInput1]
    67 000000CA 2C30                    sub al,48
    68 000000CC 4C0FB6E0                movzx r12,al
    69 000000D0 48C7C001000000          mov rax,1
    70 000000D7 4D89CA                  mov r10,r9
    71 000000DA 4983EA01                sub r10,1
    72 000000DE 49C7C30A000000          mov r11,10
    73                                 
    74                                 num1_mul10:
    75 000000E5 4983FA00                cmp r10,0
    76 000000E9 740A                    je num1_end_mul10
    77 000000EB 49F7E3                  mul r11
    78 000000EE 49FFCA                  dec r10
    79 000000F1 4983FA00                cmp r10,0
    80 000000F5 7FEC                    jg num1_mul10
    81                                 
    82                                 num1_end_mul10:
    83 000000F7 49F7E4                  mul r12
    84 000000FA 48010425[00000000]      add [number1],rax
    85 00000102 48C10C25[00000000]-     ror qword [numInput1],8
    86 00000102 08                 
    87 0000010B 49FFC9                  dec r9
    88 0000010E 4983F900                cmp r9,0
    89 00000112 7FA5                    jg convertNum1
    90                                 
    91                                 
    92                                 
    93 00000114 49C7C106000000          mov r9,6
    94                                 
    95                                 convertNum2:
    96 0000011B 4C8B0425[00000000]      mov r8,[numInput2]
    97 00000123 8A0425[00000000]        mov al,[numInput2]
    98 0000012A 2C30                    sub al,48
    99 0000012C 4C0FB6E0                movzx r12,al
   100 00000130 48C7C001000000          mov rax,1
   101 00000137 4D89CA                  mov r10,r9
   102 0000013A 4983EA01                sub r10,1
   103 0000013E 49C7C30A000000          mov r11,10
   104                                 
   105                                 num2_mul10:
   106 00000145 4983FA00                cmp r10,0
   107 00000149 740A                    je num2_end_mul10
   108 0000014B 49F7E3                  mul r11
   109 0000014E 49FFCA                  dec r10
   110 00000151 4983FA00                cmp r10,0
   111 00000155 7FEC                    jg num2_mul10
   112                                 
   113                                 num2_end_mul10:
   114 00000157 49F7E4                  mul r12
   115 0000015A 48010425[00000000]      add [number2],rax
   116 00000162 48C10C25[00000000]-     ror qword [numInput2],8
   117 00000162 08                 
   118 0000016B 49FFC9                  dec r9
   119 0000016E 4983F900                cmp r9,0
   120 00000172 7FA5                    jg convertNum2
   121                                 
   122                                 
   123                                 
   124 00000174 488B0425[00000000]      mov rax,[operand]
   125 0000017C 4883F82B                cmp rax,43
   126 00000180 7410                    je add_numbers
   127                                 
   128 00000182 4883F82D                cmp rax,45
   129 00000186 742C                    je subtract_numbers
   130                                 
   131 00000188 4883F82A                cmp rax,42
   132 0000018C 7448                    je multiply_numbers
   133                                 
   134 0000018E 4883F82F                cmp rax,47
   135 00000192 745C                    je divide_numbers
   136                                 
   137                                 add_numbers:
   138 00000194 488B0425[00000000]      mov rax,[number1]
   139 0000019C 48890425[00000000]      mov [result],rax
   140 000001A4 488B0425[00000000]      mov rax,[number2]
   141 000001AC 48010425[00000000]      add qword [result],rax
   142 000001B4 EB5C                    jmp print_sign
   143                                 
   144                                 subtract_numbers:
   145 000001B6 488B0425[00000000]      mov rax,[number1]
   146 000001BE 48890425[00000000]      mov [result],rax
   147 000001C6 488B0425[00000000]      mov rax,[number2]
   148 000001CE 48290425[00000000]      sub qword [result],rax
   149 000001D6 EB3A                    jmp print_sign
   150                                 
   151                                 multiply_numbers:
   152 000001D8 488B0425[00000000]      mov rax,[number1]
   153 000001E0 48F72425[00000000]      mul qword [number2]
   154 000001E8 48890425[00000000]      mov [result],rax
   155 000001F0 EB20                    jmp print_sign
   156                                 
   157                                 divide_numbers:
   158 000001F2 488B0425[00000000]      mov rax,[number1]
   159 000001FA 48F73425[00000000]      div qword [number2]
   160 00000202 48890425[00000000]      mov [result],rax
   161 0000020A 48891425[00000000]      mov [remainder],rdx
   162 00000212 EBFE                    jmp print_sign
   163                                 
   164                                 
   165                                 
   166                                 print_sign:
   167 00000214 488B0425[00000000]      mov rax,[result]
   168 0000021C 4883F800                cmp rax,0
   169 00000220 7C1E                    jl print_sign_negative
   170 00000222 48C7C001000000          mov rax,1
   171 00000229 48C7C701000000          mov rdi,1
   172 00000230 48C7C201000000          mov rdx,1
   173 00000237 48C7C6[00000000]        mov rsi,positive
   174 0000023E 0F05                    syscall
   175 00000240 EB2A                    jmp display
   176                                 
   177                                 print_sign_negative:
   178 00000242 488B0425[00000000]      mov rax,[result]
   179 0000024A 4883F800                cmp rax,0
   180 0000024E 7D1C                    jge display
   181 00000250 48C7C001000000          mov rax,1
   182 00000257 48C7C201000000          mov rdx,1
   183 0000025E 48C7C701000000          mov rdi,1
   184 00000265 48C7C6[00000000]        mov rsi,negative
   185 0000026C 0F05                    syscall
   186                                 
   187                                 display:
   188                                 
   189 0000026E 49B80010A5D4E80000-     mov r8,1000000000000
   190 0000026E 00                 
   191 00000278 488B0425[00000000]      mov rax,[result]
   192 00000280 48C7C200000000          mov rdx,0
   193 00000287 49F7F0                  div r8
   194 0000028A 4883F800                cmp rax,0
   195 0000028E 7F7A                    jg overflow
   196                                 
   197 00000290 488B0425[00000000]      mov rax,[result]
   198 00000298 4883F800                cmp rax,0
   199 0000029C 7D09                    jge display_loop
   200 0000029E 48F7D8                  neg rax
   201 000002A1 48890425[00000000]      mov [result],rax
   202                                 
   203                                 display_loop:
   204 000002A9 49C7C20A000000          mov r10,10
   205 000002B0 4C89C0                  mov rax,r8
   206 000002B3 48C7C200000000          mov rdx,0
   207 000002BA 49F7F2                  div r10
   208 000002BD 4989C0                  mov r8,rax
   209                                 
   210 000002C0 488B0425[00000000]      mov rax,[result]
   211 000002C8 48C7C200000000          mov rdx,0
   212 000002CF 49F7F0                  div r8
   213                                 
   214 000002D2 48891425[00000000]      mov [result],rdx
   215 000002DA 4883C030                add rax,48
   216 000002DE 48890425[00000000]      mov [character],rax
   217                                 
   218 000002E6 48C7C001000000          mov rax,1
   219 000002ED 48C7C201000000          mov rdx,1
   220 000002F4 48C7C701000000          mov rdi,1
   221 000002FB 48C7C6[00000000]        mov rsi,character
   222 00000302 0F05                    syscall
   223                                 
   224 00000304 4983F801                cmp r8,1
   225 00000308 7F9D                    jg display_loop
   226 0000030A EB1E                    jmp print_remainder
   227                                 
   228                                 overflow:
   229 0000030C 48C7C001000000          mov rax,1
   230 00000313 48C7C205000000          mov rdx,5
   231 0000031A 48C7C701000000          mov rdi,1
   232 00000321 48C7C6[00000000]        mov rsi,error_message
   233 00000328 0F05                    syscall
   234 0000032A EB51                    jmp exit
   235                                 
   236                                 print_remainder:
   237 0000032C 488B0425[00000000]      mov rax,[remainder]
   238 00000334 4883F800                cmp rax,0
   239 00000338 7443                    je exit
   240 0000033A 48C7C001000000          mov rax,1
   241 00000341 48C7C701000000          mov rdi,1
   242 00000348 48C7C204000000          mov rdx,4
   243 0000034F 48C7C6[00000000]        mov rsi,remainder_message
   244 00000356 0F05                    syscall
   245                                 
   246 00000358 48830425[00000000]-     add qword [remainder],48
   247 00000358 30                 
   248 00000361 48C7C001000000          mov rax,1
   249 00000368 48C7C201000000          mov rdx,1
   250 0000036F 48C7C701000000          mov rdi,1
   251 00000376 48C7C6[00000000]        mov rsi,remainder
   252 0000037D 0F05                    syscall
   253                                 
   254                                 exit:
   255 0000037F 48C7C001000000          mov rax,1
   256 00000386 48C7C201000000          mov rdx,1
   257 0000038D 48C7C701000000          mov rdi,1
   258 00000394 48C7C6[00000000]        mov rsi,newline
   259 0000039B 0F05                    syscall
   260                                 
   261 0000039D 48C7C03C000000          mov rax,60
   262 000003A4 48C7C700000000          mov rdi,0
   263 000003AB 0F05                    syscall
