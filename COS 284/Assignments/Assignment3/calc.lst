     1                                 %line 1+1 calc.asm
     2                                 [section .data]
     3                                 
     4 00000000 0000000000000000       number1 dq 0
     5 00000008 0000000000000000       number2 dq 0
     6 00000010 0000000000000000       result dq 0
     7 00000018 0000000000000000       numInput1 dq 0
     8 00000020 0000000000000000       numInput2 dq 0
     9 00000028 0000000000000000       dummyRead dq 0
    10 00000030 0000000000000000       operand dq 0
    11 00000038 0000000000000000       character dq 0
    12 00000040 0000000000000000       remainder dq 0
    13 00000048 2B00000000000000       positive dq 43
    14 00000050 2D00000000000000       negative dq 45
    15 00000058 0A00000000000000       newline dq 0x0a
    16 00000060 4552524F52000000       error_message dq "ERROR"
    17 00000068 2072200000000000       remainder_message dq " r "
    18                                 
    19                                 [section .text]
    20                                 [global _start]
    21                                 
    22                                 _start:
    23                                 
    24 00000000 48C7C000000000          mov rax,0
    25 00000007 48C7C206000000          mov rdx,6
    26 0000000E 48C7C700000000          mov rdi,0
    27 00000015 48C7C6[00000000]        mov rsi,numInput1
    28 0000001C 0F05                    syscall
    29                                 
    30 0000001E 48C7C000000000          mov rax,0
    31 00000025 48C7C201000000          mov rdx,1
    32 0000002C 48C7C700000000          mov rdi,0
    33 00000033 48C7C6[00000000]        mov rsi,dummyRead
    34 0000003A 0F05                    syscall
    35                                 
    36 0000003C 48C7C000000000          mov rax,0
    37 00000043 48C7C201000000          mov rdx,1
    38 0000004A 48C7C700000000          mov rdi,0
    39 00000051 48C7C6[00000000]        mov rsi,operand
    40 00000058 0F05                    syscall
    41                                 
    42 0000005A 48C7C000000000          mov rax,0
    43 00000061 48C7C201000000          mov rdx,1
    44 00000068 48C7C700000000          mov rdi,0
    45 0000006F 48C7C6[00000000]        mov rsi,dummyRead
    46 00000076 0F05                    syscall
    47                                 
    48 00000078 48C7C000000000          mov rax,0
    49 0000007F 48C7C206000000          mov rdx,6
    50 00000086 48C7C700000000          mov rdi,0
    51 0000008D 48C7C6[00000000]        mov rsi,numInput2
    52 00000094 0F05                    syscall
    53                                 
    54 00000096 48C7C000000000          mov rax,0
    55 0000009D 48C7C203000000          mov rdx,3
    56 000000A4 48C7C700000000          mov rdi,0
    57 000000AB 48C7C6[00000000]        mov rsi,dummyRead
    58                                 
    59 000000B2 49C7C106000000          mov r9,6
    60                                 convertNum1:
    61                                 
    62 000000B9 4C8B0425[00000000]      mov r8,[numInput1]
    63 000000C1 8A0425[00000000]        mov al,[numInput1]
    64 000000C8 2C30                    sub al,48
    65 000000CA 4C0FB6E0                movzx r12,al
    66 000000CE 48C7C001000000          mov rax,1
    67 000000D5 4D89CA                  mov r10,r9
    68 000000D8 4983EA01                sub r10,1
    69 000000DC 49C7C30A000000          mov r11,10
    70                                 
    71                                 num1_mul10:
    72 000000E3 4983FA00                cmp r10,0
    73 000000E7 740A                    je num1_end_mul10
    74 000000E9 49F7E3                  mul r11
    75 000000EC 49FFCA                  dec r10
    76 000000EF 4983FA00                cmp r10,0
    77 000000F3 7FEC                    jg num1_mul10
    78                                 
    79                                 num1_end_mul10:
    80 000000F5 49F7E4                  mul r12
    81 000000F8 48010425[00000000]      add [number1],rax
    82 00000100 48C10C25[00000000]-     ror qword [numInput1],8
    83 00000100 08                 
    84 00000109 49FFC9                  dec r9
    85 0000010C 4983F900                cmp r9,0
    86 00000110 7FA5                    jg convertNum1
    87                                 
    88                                 
    89                                 
    90 00000112 49C7C106000000          mov r9,6
    91                                 
    92                                 convertNum2:
    93 00000119 4C8B0425[00000000]      mov r8,[numInput2]
    94 00000121 8A0425[00000000]        mov al,[numInput2]
    95 00000128 2C30                    sub al,48
    96 0000012A 4C0FB6E0                movzx r12,al
    97 0000012E 48C7C001000000          mov rax,1
    98 00000135 4D89CA                  mov r10,r9
    99 00000138 4983EA01                sub r10,1
   100 0000013C 49C7C30A000000          mov r11,10
   101                                 
   102                                 num2_mul10:
   103 00000143 4983FA00                cmp r10,0
   104 00000147 740A                    je num2_end_mul10
   105 00000149 49F7E3                  mul r11
   106 0000014C 49FFCA                  dec r10
   107 0000014F 4983FA00                cmp r10,0
   108 00000153 7FEC                    jg num2_mul10
   109                                 
   110                                 num2_end_mul10:
   111 00000155 49F7E4                  mul r12
   112 00000158 48010425[00000000]      add [number2],rax
   113 00000160 48C10C25[00000000]-     ror qword [numInput2],8
   114 00000160 08                 
   115 00000169 49FFC9                  dec r9
   116 0000016C 4983F900                cmp r9,0
   117 00000170 7FA5                    jg convertNum2
   118                                 
   119                                 
   120                                 
   121 00000172 488B0425[00000000]      mov rax,[operand]
   122 0000017A 4883F82B                cmp rax,43
   123 0000017E 7410                    je add_numbers
   124                                 
   125 00000180 4883F82D                cmp rax,45
   126 00000184 742C                    je subtract_numbers
   127                                 
   128 00000186 4883F82A                cmp rax,42
   129 0000018A 7448                    je multiply_numbers
   130                                 
   131 0000018C 4883F82F                cmp rax,47
   132 00000190 745C                    je divide_numbers
   133                                 
   134                                 add_numbers:
   135 00000192 488B0425[00000000]      mov rax,[number1]
   136 0000019A 48890425[00000000]      mov [result],rax
   137 000001A2 488B0425[00000000]      mov rax,[number2]
   138 000001AA 48010425[00000000]      add qword [result],rax
   139 000001B2 EB5C                    jmp print_sign
   140                                 
   141                                 subtract_numbers:
   142 000001B4 488B0425[00000000]      mov rax,[number1]
   143 000001BC 48890425[00000000]      mov [result],rax
   144 000001C4 488B0425[00000000]      mov rax,[number2]
   145 000001CC 48290425[00000000]      sub qword [result],rax
   146 000001D4 EB3A                    jmp print_sign
   147                                 
   148                                 multiply_numbers:
   149 000001D6 488B0425[00000000]      mov rax,[number1]
   150 000001DE 48F72425[00000000]      mul qword [number2]
   151 000001E6 48890425[00000000]      mov [result],rax
   152 000001EE EB20                    jmp print_sign
   153                                 
   154                                 divide_numbers:
   155 000001F0 488B0425[00000000]      mov rax,[number1]
   156 000001F8 48F73425[00000000]      div qword [number2]
   157 00000200 48890425[00000000]      mov [result],rax
   158 00000208 48891425[00000000]      mov [remainder],rdx
   159 00000210 EBFE                    jmp print_sign
   160                                 
   161                                 
   162                                 
   163                                 print_sign:
   164 00000212 488B0425[00000000]      mov rax,[result]
   165 0000021A 4883F800                cmp rax,0
   166 0000021E 7C1C                    jl print_sign_negative
   167 00000220 48C7C001000000          mov rax,1
   168 00000227 48C7C701000000          mov rdi,1
   169 0000022E 48C7C201000000          mov rdx,1
   170 00000235 48C7C6[00000000]        mov rsi,positive
   171 0000023C EB2A                    jmp display
   172                                 
   173                                 print_sign_negative:
   174 0000023E 488B0425[00000000]      mov rax,[result]
   175 00000246 4883F800                cmp rax,0
   176 0000024A 7D1C                    jge display
   177 0000024C 48C7C001000000          mov rax,1
   178 00000253 48C7C201000000          mov rdx,1
   179 0000025A 48C7C701000000          mov rdi,1
   180 00000261 48C7C6[00000000]        mov rsi,negative
   181 00000268 0F05                    syscall
   182                                 
   183                                 display:
   184                                 
   185 0000026A 49B80010A5D4E80000-     mov r8,1000000000000
   186 0000026A 00                 
   187 00000274 488B0425[00000000]      mov rax,[result]
   188 0000027C 48C7C200000000          mov rdx,0
   189 00000283 49F7F0                  div r8
   190 00000286 4883F800                cmp rax,0
   191 0000028A 7F7A                    jg overflow
   192                                 
   193 0000028C 488B0425[00000000]      mov rax,[result]
   194 00000294 4883F800                cmp rax,0
   195 00000298 7D09                    jge display_loop
   196 0000029A 48F7D8                  neg rax
   197 0000029D 48890425[00000000]      mov [result],rax
   198                                 
   199                                 display_loop:
   200 000002A5 49C7C20A000000          mov r10,10
   201 000002AC 4C89C0                  mov rax,r8
   202 000002AF 48C7C200000000          mov rdx,0
   203 000002B6 49F7F2                  div r10
   204 000002B9 4989C0                  mov r8,rax
   205                                 
   206 000002BC 488B0425[00000000]      mov rax,[result]
   207 000002C4 48C7C200000000          mov rdx,0
   208 000002CB 49F7F0                  div r8
   209                                 
   210 000002CE 48891425[00000000]      mov [result],rdx
   211 000002D6 4883C030                add rax,48
   212 000002DA 48890425[00000000]      mov [character],rax
   213                                 
   214 000002E2 48C7C001000000          mov rax,1
   215 000002E9 48C7C201000000          mov rdx,1
   216 000002F0 48C7C701000000          mov rdi,1
   217 000002F7 48C7C6[00000000]        mov rsi,character
   218 000002FE 0F05                    syscall
   219                                 
   220 00000300 4983F801                cmp r8,1
   221 00000304 7F9D                    jg display_loop
   222 00000306 EB1E                    jmp print_remainder
   223                                 
   224                                 overflow:
   225 00000308 48C7C001000000          mov rax,1
   226 0000030F 48C7C205000000          mov rdx,5
   227 00000316 48C7C701000000          mov rdi,1
   228 0000031D 48C7C6[00000000]        mov rsi,error_message
   229 00000324 0F05                    syscall
   230 00000326 EB2A                    jmp exit
   231                                 
   232                                 print_remainder:
   233 00000328 488B0425[00000000]      mov rax,[remainder]
   234 00000330 4883F800                cmp rax,0
   235 00000334 741C                    je exit
   236 00000336 48C7C001000000          mov rax,1
   237 0000033D 48C7C701000000          mov rdi,1
   238 00000344 48C7C204000000          mov rdx,4
   239 0000034B 48C7C6[00000000]        mov rsi,remainder_message
   240 00000352 0F05                    syscall
   241                                 
   242                                 
   243                                 exit:
   244                                 
   245                                 
   246                                 
   247                                 
   248                                 
   249                                 
   250 00000354 48C7C03C000000          mov rax,60
   251 0000035B 48C7C700000000          mov rdi,0
   252 00000362 0F05                    syscall
